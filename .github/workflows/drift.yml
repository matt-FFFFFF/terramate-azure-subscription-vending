name: Scheduled Terraform Drift Detection

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  drift-detection:
    name: Check Drift

    permissions:
      id-token: write
      contents: read
      pull-requests: read
      checks: read

    runs-on: ubuntu-latest

    env:
      ARM_USE_OIDC: true

    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install Terramate
        uses: terramate-io/terramate-action@b5d1461d435ba454179045ea062bbecb32738913 # v2.0.0

      - name: Install Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.10.4
          terraform_wrapper: false

      - name: Generate code
        id: generate
        run: terramate generate

      - name: Run Terraform init on all stacks
        id: init
        run: terramate script run --parallel 1 -- init
        env:
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}

      - name: Git status
        run: git status -sb

      - name: Run drift detection
        id: drift
        run: |
          terramate script run --parallel 5 --continue-on-error -- drift detect
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}

      - name: Run drift reconciliation
        id: drift-reconcile
        run: |
          terramate script run --tags reconcile --status=drifted --parallel 5 --continue-on-error -- drift reconcile
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
